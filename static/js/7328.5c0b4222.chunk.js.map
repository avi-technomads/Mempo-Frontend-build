{"version":3,"file":"static/js/7328.5c0b4222.chunk.js","mappings":"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","sources":["views/demo/Charts.js","views/demo/NormalTransaction.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { COLORS } from \"constants/chart.constant\";\nimport moment from \"moment\";\n\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\n\nconst Charts = ({ apiCallof }) => {\n  const [requestData, setRequestData] = useState([]);\n\n  async function getdataInternal() {\n    return await fetch(`${baseUrl}/${apiCallof}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setRequestData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    getdataInternal();\n  }, []);\n\n  const reqSeriesJan = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jan\")\n  );\n\n  const reqSeriesFeb = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"feb\")\n  );\n\n  const reqSeriesMar = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"mar\")\n  );\n\n  const reqSeriesApr = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"apr\")\n  );\n\n  const reqSeriesMay = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"may\")\n  );\n\n  const reqSeriesJune = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jun\")\n  );\n\n  const reqSeriesJul = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jul\")\n  );\n\n  const reqSeriesAug = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"aug\")\n  );\n\n  const reqSeriesSep = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"sep\")\n  );\n\n  const reqSeriesOct = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"oct\")\n  );\n\n  const reqSeriesNov = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"nov\")\n  );\n\n  const reqSeriesDec = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"dec\")\n  );\n\n  const data = [\n    {\n      name: \"Transactions\",\n      data: [\n        reqSeriesJan.length,\n        reqSeriesFeb.length,\n        reqSeriesMar.length,\n        reqSeriesApr.length,\n        reqSeriesMay.length,\n        reqSeriesJune.length,\n        reqSeriesJul.length,\n        reqSeriesAug.length,\n        reqSeriesSep.length,\n        reqSeriesOct.length,\n        reqSeriesNov.length,\n        reqSeriesDec.length,\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <Chart\n        options={{\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              columnWidth: \"30%\",\n              endingShape: \"rounded\",\n            },\n          },\n          colors: COLORS,\n          dataLabels: {\n            enabled: false,\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: [\"transparent\"],\n          },\n          xaxis: {\n            categories: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n            ],\n          },\n          fill: {\n            opacity: 1,\n          },\n          tooltip: {\n            y: {\n              formatter: (val) => `${val}`,\n            },\n          },\n        }}\n        series={data}\n        height={300}\n        type=\"bar\"\n      />\n    </>\n  );\n};\n\nexport default Charts;\n","import React, { useEffect, useState } from \"react\";\r\nimport { Spinner, Input } from \"components/ui\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport axios from \"axios\";\r\nimport Charts from \"./Charts\";\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\n/** Example purpose only */\r\nconst CollapseMenuItemView2 = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [requestData, setRequestData] = useState([]);\r\n  console.log(\"ðŸš€ ~ requestData\", requestData);\r\n  const [oldRequestData, setOldRequestData] = useState([]);\r\n  console.log(\"ðŸš€ ~ oldRequestData\", oldRequestData);\r\n\r\n  const getdataInternal = async () => {\r\n    await axios\r\n      .get(`${baseUrl}/normalTransaction`)\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        setRequestData(data);\r\n        setOldRequestData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getdataInternal();\r\n    // Daggfgcjhxg();\r\n  }, []);\r\n\r\n  const dataChangeHandler = (e) => {\r\n    if (e.target.value) {\r\n      const searchData = oldRequestData.filter((i) => {\r\n        return (\r\n          i?.blockNumber\r\n            ?.toLowerCase()\r\n            .includes(e.target.value.toLowerCase()) ||\r\n          i?.contractAddress\r\n            ?.toLowerCase()\r\n            .includes(e.target.value.toLowerCase()) ||\r\n          i?.from?.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n          i?.to?.toLowerCase().includes(e.target.value.toLowerCase()) ||\r\n          new Date(i?.createdAt)\r\n            ?.toLocaleDateString([], {\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: true,\r\n            })\r\n            ?.toLowerCase()\r\n            .includes(e.target.value.toLowerCase())\r\n        );\r\n      });\r\n      setRequestData(searchData);\r\n    } else {\r\n      setRequestData(oldRequestData);\r\n    }\r\n  };\r\n  const notify = () => toast.success(\"Address Copied!\");\r\n\r\n  return (\r\n    <>\r\n    <ToastContainer />\r\n    <Charts apiCallof=\"normalTransaction\" />\r\n      {loading ? (\r\n        <div className=\"flex items-center\">\r\n          <Spinner className=\"absolute top-1/2 left-1/2\" size=\"40px\" />\r\n        </div>\r\n      ) : (\r\n        <div className=\"overflow-x-auto relative\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            onChange={dataChangeHandler}\r\n          />\r\n          <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"py-3 px-6\">\r\n                  Block Number\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px-6\">\r\n                  Contract Address\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px-6\">\r\n                  From\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px-6\">\r\n                  To\r\n                </th>\r\n                <th scope=\"col\" className=\"py-3 px-6\">\r\n                  Created Time\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {requestData?.map((item) => (\r\n                <tr\r\n                  className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\r\n                  key={item._id}\r\n                >\r\n                  <td\r\n                    scope=\"row\"\r\n                    className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\r\n                  >\r\n                    {item.blockNumber}\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    {item.contractAddress?.slice(0, 3)}...\r\n                    {item.contractAddress?.slice(-3)}\r\n                    <i\r\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(item.contractAddress);\r\n                        notify()\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    <span>\r\n                      {item?.from?.slice(0, 3)}...{item?.from?.slice(-3)}\r\n                    </span>\r\n                    <i\r\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(item.from);\r\n                        notify()\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    <span>\r\n                      {item?.to?.slice(0, 3)}...{item?.to?.slice(-3)}\r\n                    </span>\r\n                    <i\r\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\r\n                      onClick={() => {\r\n                        navigator.clipboard.writeText(item.to);\r\n                        notify()\r\n                      }}\r\n                    ></i>\r\n                  </td>\r\n                  <td className=\"py-4 px-6\">\r\n                    {new Date(item?.createdAt)?.toLocaleDateString([], {\r\n                      year: \"numeric\",\r\n                      month: \"long\",\r\n                      day: \"numeric\",\r\n                      hour: \"2-digit\",\r\n                      minute: \"2-digit\",\r\n                      hour12: true,\r\n                    })}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollapseMenuItemView2;\r\n"],"names":["baseUrl","process","apiCallof","useState","requestData","setRequestData","fetch","then","res","json","data","catch","err","console","log","useEffect","getdataInternal","reqSeriesJan","filter","i","moment","timeStamp","toString","toLowerCase","includes","reqSeriesFeb","reqSeriesMar","reqSeriesApr","reqSeriesMay","reqSeriesJune","reqSeriesJul","reqSeriesAug","reqSeriesSep","reqSeriesOct","reqSeriesNov","reqSeriesDec","name","length","options","plotOptions","bar","horizontal","columnWidth","endingShape","colors","COLORS","dataLabels","enabled","stroke","show","width","xaxis","categories","fill","opacity","tooltip","y","formatter","val","series","height","type","loading","setLoading","oldRequestData","setOldRequestData","axios","error","notify","toast","className","size","placeholder","onChange","e","target","value","searchData","blockNumber","contractAddress","from","to","Date","createdAt","toLocaleDateString","year","month","day","hour","minute","hour12","scope","map","item","slice","onClick","navigator","clipboard","writeText","_id"],"sourceRoot":""}