{"version":3,"file":"static/js/651.a1f4695b.chunk.js","mappings":"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","sources":["views/demo/Charts.js","views/demo/Erc721.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { COLORS } from \"constants/chart.constant\";\nimport moment from \"moment\";\n\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\n\nconst Charts = ({ apiCallof }) => {\n  const [requestData, setRequestData] = useState([]);\n\n  async function getdataInternal() {\n    return await fetch(`${baseUrl}/${apiCallof}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setRequestData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    getdataInternal();\n  }, []);\n\n  const reqSeriesJan = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jan\")\n  );\n\n  const reqSeriesFeb = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"feb\")\n  );\n\n  const reqSeriesMar = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"mar\")\n  );\n\n  const reqSeriesApr = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"apr\")\n  );\n\n  const reqSeriesMay = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"may\")\n  );\n\n  const reqSeriesJune = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jun\")\n  );\n\n  const reqSeriesJul = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"jul\")\n  );\n\n  const reqSeriesAug = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"aug\")\n  );\n\n  const reqSeriesSep = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"sep\")\n  );\n\n  const reqSeriesOct = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"oct\")\n  );\n\n  const reqSeriesNov = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"nov\")\n  );\n\n  const reqSeriesDec = requestData.filter((i) =>\n    moment\n      .unix(i.timeStamp)\n      .toString()\n      .toLowerCase()\n      .includes(\"dec\")\n  );\n\n  const data = [\n    {\n      name: \"Transactions\",\n      data: [\n        reqSeriesJan.length,\n        reqSeriesFeb.length,\n        reqSeriesMar.length,\n        reqSeriesApr.length,\n        reqSeriesMay.length,\n        reqSeriesJune.length,\n        reqSeriesJul.length,\n        reqSeriesAug.length,\n        reqSeriesSep.length,\n        reqSeriesOct.length,\n        reqSeriesNov.length,\n        reqSeriesDec.length,\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <Chart\n        options={{\n          plotOptions: {\n            bar: {\n              horizontal: false,\n              columnWidth: \"30%\",\n              endingShape: \"rounded\",\n            },\n          },\n          colors: COLORS,\n          dataLabels: {\n            enabled: false,\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: [\"transparent\"],\n          },\n          xaxis: {\n            categories: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"May\",\n              \"Jun\",\n              \"Jul\",\n              \"Aug\",\n              \"Sep\",\n              \"Oct\",\n              \"Nov\",\n              \"Dec\",\n            ],\n          },\n          fill: {\n            opacity: 1,\n          },\n          tooltip: {\n            y: {\n              formatter: (val) => `${val}`,\n            },\n          },\n        }}\n        series={data}\n        height={300}\n        type=\"bar\"\n      />\n    </>\n  );\n};\n\nexport default Charts;\n","import React, { useEffect, useState } from \"react\";\nimport { Spinner, Input } from \"components/ui\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport moment from \"moment\";\nimport Charts from \"./Charts\";\n\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\n\n/** Example purpose only */\nconst CollapseMenuItemView2 = () => {\n  useEffect(() => {\n    getdataInternal();\n  }, []);\n\n  const [loading, setLoading] = useState(true);\n  const [requestData, setRequestData] = useState([]);\n  const [oldRequestData, setOldRequestData] = useState([]);\n\n  async function getdataInternal() {\n    return await fetch(`${baseUrl}/erc721`)\n      .then((res) => res.json())\n      .then((data) => {\n        setRequestData(data);\n        setOldRequestData(data);\n        setLoading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const dataChangeHandler = (e) => {\n    if (e.target.value) {\n      const searchData = oldRequestData.filter((i) => {\n        return (\n          i?.blockNumber\n            ?.toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          i?.contractAddress\n            ?.toLowerCase()\n            .includes(e.target.value.toLowerCase()) ||\n          i?.from?.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          i?.to?.toLowerCase().includes(e.target.value.toLowerCase()) ||\n          i?.moment\n            ?.unix(i.timeStamp)\n            ?.toString()\n            ?.toLowerCase()\n            ?.includes(e.target.value.toLowerCase())\n        );\n      });\n      setRequestData(searchData);\n    } else {\n      setRequestData(oldRequestData);\n    }\n  };\n\n  const notify = () => toast.success(\"Address Copied!\");\n\n  return (\n    <>\n      <ToastContainer />\n      <Charts apiCallof=\"erc721\" />\n      {loading ? (\n        <div className=\"flex items-center\">\n          <Spinner className=\"absolute top-1/2 left-1/2\" size=\"40px\" />\n        </div>\n      ) : (\n        <div className=\"overflow-x-auto relative\">\n          <Input\n            type=\"text\"\n            placeholder=\"search\"\n            onChange={dataChangeHandler}\n          />\n          <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 mt-10\">\n            <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\n              <tr>\n                <th scope=\"col\" className=\"py-3 px-6\">\n                  Block Number\n                </th>\n                <th scope=\"col\" className=\"py-3 px-6\">\n                  Contract Address\n                </th>\n                <th scope=\"col\" className=\"py-3 px-6\">\n                  From\n                </th>\n                <th scope=\"col\" className=\"py-3 px-6\">\n                  To\n                </th>\n                <th scope=\"col\" className=\"py-3 px-6\">\n                  Created Time\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {requestData?.map((item) => (\n                <tr\n                  className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\n                  key={item._id}\n                >\n                  <td\n                    scope=\"row\"\n                    className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\n                  >\n                    {console.log(moment.unix(item.timeStamp).toString())}\n                    {item.blockNumber}\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    {item.contractAddress?.slice(0, 3)}...\n                    {item.contractAddress?.slice(-3)}\n                    <i\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(item.contractAddress);\n                        notify();\n                      }}\n                    ></i>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span>\n                      {item?.from?.slice(0, 3)}...{item?.from?.slice(-3)}\n                    </span>\n                    <i\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(item.from);\n                        notify();\n                      }}\n                    ></i>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    <span>\n                      {item?.to?.slice(0, 3)}...{item?.to?.slice(-3)}\n                    </span>\n                    <i\n                      className=\"fa-solid fa-copy pl-2 cursor-pointer\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(item.to);\n                        notify();\n                      }}\n                    ></i>\n                  </td>\n                  <td className=\"py-4 px-6\">\n                    {moment.unix(item.timeStamp).toString()}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default CollapseMenuItemView2;\n"],"names":["baseUrl","process","apiCallof","useState","requestData","setRequestData","fetch","then","res","json","data","catch","err","console","log","useEffect","getdataInternal","reqSeriesJan","filter","i","moment","timeStamp","toString","toLowerCase","includes","reqSeriesFeb","reqSeriesMar","reqSeriesApr","reqSeriesMay","reqSeriesJune","reqSeriesJul","reqSeriesAug","reqSeriesSep","reqSeriesOct","reqSeriesNov","reqSeriesDec","name","length","options","plotOptions","bar","horizontal","columnWidth","endingShape","colors","COLORS","dataLabels","enabled","stroke","show","width","xaxis","categories","fill","opacity","tooltip","y","formatter","val","series","height","type","loading","setLoading","oldRequestData","setOldRequestData","notify","toast","className","size","placeholder","onChange","e","target","value","searchData","blockNumber","contractAddress","from","to","unix","scope","map","item","slice","onClick","navigator","clipboard","writeText","_id"],"sourceRoot":""}