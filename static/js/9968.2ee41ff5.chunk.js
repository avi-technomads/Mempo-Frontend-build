"use strict";(self.webpackChunkMempoverse=self.webpackChunkMempoverse||[]).push([[9968],{89968:function(e,t,n){n.r(t);n(72791);var r=n(99965),s=n(80184);t.default=function(){return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("p",{children:"Follow the steps below to make backend api linkage working."}),(0,s.jsxs)("ol",{children:[(0,s.jsx)("li",{children:(0,s.jsxs)("p",{children:["First, create a ",(0,s.jsx)("code",{children:"xxxService.js"})," file(depends on your feature or module) under ",(0,s.jsx)("code",{children:"services"})," directory"]})}),(0,s.jsxs)("li",{children:[(0,s.jsxs)("p",{children:["Declare an async function returning ",(0,s.jsx)("code",{children:"ApiService.fetchData"})," method and pass in your api configuration details as the code below:"]}),(0,s.jsx)(r.d3,{language:"js",children:"import ApiService from \"./ApiService\"\n\nexport async function yourApi (data) {\n    return ApiService.fetchData({\n        url: '/your-api-url',\n        method: 'post',\n        data\n    })\n}\n..."})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("p",{children:"And now you can hook up this API in your component"}),(0,s.jsx)(r.d3,{language:"js",children:"import { useEffect } from 'react'\nimport { yourApi } from './YourService.js'\n\nconst YourComponent = props => {\n\n\tconst fetchData = async () => {\n\t\tconst reqeustParam = { key: 'value'}\n\t\ttry {\n\t\t\tconst resp = await yourApi(reqeustParam)\n\t\t\tif (resp.data) {\n\t\t\t\t...do something\n\t\t\t}\n\t\t} catch (errors) {\n\t\t\t...handle errors\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchData()\n\t}, [])\n\n\treturn (\n\t\t...\n\t)"})]}),(0,s.jsxs)("li",{children:[(0,s.jsxs)("p",{children:["you can also use this service with ",(0,s.jsx)("code",{children:"createAsyncThunk"})]}),(0,s.jsx)(r.d3,{language:"jsx",children:"import { createSlice } from '@reduxjs/toolkit'\nimport { yourApi } from './YourService.js'\n\nexport const getApiData = createAsyncThunk('sliceName/getApiData',async (data) => {\n    const response = await yourApi(data)\n    return response.data\n})\n\nconst yourSlice = createSlice({\n\t...\n\textraReducers: (builder) => {\n\t\tbuilder\n\t\t\t.addCase(getApiData.fulfilled, (state, action) => {\n\t\t\t\t...\n\t\t\t})\n\t},\n})\n\nexport const { someActionFromYourSlice } = yourSlice.actions\n\nexport default yourSlice.reducer"})]})]}),(0,s.jsxs)("div",{className:"mt-10",id:"proxying",children:[(0,s.jsx)("h5",{children:"Proxying"}),(0,s.jsx)("p",{className:"mt-1",children:"Developer often consume API from different servers than the frontend application, there are complications that arise as a result of requests being sent across both servers, here is some way to setting up a proxy server."}),(0,s.jsxs)("ul",{children:[(0,s.jsxs)("li",{children:[(0,s.jsx)("strong",{children:"Add proxy package.json"}),(0,s.jsx)("p",{className:"mt-1",children:"A simple & quick solution to proxying a server"}),(0,s.jsx)(r.d3,{language:"js",children:'"proxy": "http:yourDevDomain.com"'})]}),(0,s.jsxs)("li",{children:[(0,s.jsx)("strong",{children:"Manually setup"}),(0,s.jsxs)("p",{className:"mt-1",children:["You can choose to setup with ",(0,s.jsx)("code",{children:"http-proxy-middleware"})," for more flexible configuration."]}),(0,s.jsxs)("p",{children:["Create ",(0,s.jsx)("code",{children:"setupProxy.js"})," and place under ",(0,s.jsx)("code",{children:"src/"})," directory with code following code:"]}),(0,s.jsx)(r.d3,{language:"js",children:"const { createProxyMiddleware } = require('http-proxy-middleware')\n\nmodule.exports = function(app) {\n\tapp.use(\n\t\t'/api',\n\t\t\tcreateProxyMiddleware({\n\t\t\ttarget: 'http:yourDevDomain.com', // <--- config the url based on your backend server\n\t\t\tchangeOrigin: true,\n\t\t})\n\t)\n}"})]})]})]})]})}}}]);
//# sourceMappingURL=9968.2ee41ff5.chunk.js.map