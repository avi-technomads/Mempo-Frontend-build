{"version":3,"file":"static/js/125.81deb263.chunk.js","mappings":"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","sources":["views/demo/SingleMenuView.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Input, Button, Tooltip, FormItem, FormContainer } from \"components/ui\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport { HiOutlineQuestionMarkCircle } from \"react-icons/hi\";\r\nimport axios from \"axios\";\r\nimport { head } from \"lodash\";\r\nimport { Tabs } from \"components/ui\";\r\nimport moment from \"moment\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst { TabNav, TabList, TabContent } = Tabs;\r\nconst baseUrl = process.env.REACT_APP_BACKEND_URL;\r\n\r\nconst tip = (\r\n  <Tooltip title=\"Field info\">\r\n    <HiOutlineQuestionMarkCircle className=\"text-lg cursor-pointer ml-1\" />\r\n  </Tooltip>\r\n);\r\n\r\nconst optional = <span className=\"ml-1 opacity-60\">(optional)</span>;\r\n/** Example purpose only */\r\nconst SingleMenuView = () => {\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [inputData, setInputData] = useState(\"\");\r\n\r\n  const [blackListInputData, setBlackListInputData] = useState(\"\");\r\n  console.log(\"ðŸš€ ~ blackListInputData\", blackListInputData);\r\n\r\n  const [storeData, setStoreData] = useState(\"\");\r\n\r\n  const [blackListStoreData, setBlackListStoreData] = useState(\"\");\r\n\r\n  const [backendData, setBackendData] = useState([]);\r\n\r\n  const [blackListDataShow, setBlackListDataShow] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${baseUrl}/getContract`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ listType: true }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function(res) {\r\n        setBackendData(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    fetch(`${baseUrl}/getContract`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ listType: false }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function(res) {\r\n        setBlackListDataShow(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const changeHandler = (event) => {\r\n    setInputData(event.target.value);\r\n  };\r\n\r\n  const blackListChangeHandler = (event) => {\r\n    setBlackListInputData(event.target.value);\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    fetch(`${baseUrl}/addContract`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ contract: inputData, listType: true }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function(res) {\r\n        setStoreData(res);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    submitNotify();\r\n  };\r\n\r\n  const blackListSubmitHandler = () => {\r\n    fetch(`${baseUrl}/addContract`, {\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify({ contract: blackListInputData, listType: false }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(function(res) {\r\n        console.log(\"ðŸš€ ~ res\", res);\r\n        // setStoreData(res);\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    blackListSubmitNotify();\r\n  };\r\n\r\n  const notify = () => toast.success(\"Contract Address Copied!\");\r\n  const submitNotify = () => toast.success(\"Whitelisted!\");\r\n  const blackListSubmitNotify = () => toast.success(\"Black Listed!\");\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer />\r\n\r\n      <div>\r\n        <Tabs defaultValue=\"tab1\">\r\n          <TabList>\r\n            <TabNav value=\"tab1\">Whitelist Contract</TabNav>\r\n            <TabNav value=\"tab2\">Blacklist Contract</TabNav>\r\n          </TabList>\r\n          <div className=\"p-4\">\r\n            <TabContent value=\"tab1\">\r\n              <div>\r\n                <Formik\r\n                  initialValues={{\r\n                    fieldA: \"\",\r\n                  }}\r\n                  onSubmit={submitHandler}\r\n                >\r\n                  <Form>\r\n                    <FormContainer>\r\n                      <FormItem label=\"Polygon Contract Address\">\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"fieldA\"\r\n                          placeholder=\"Please Input contract address\"\r\n                          component={Input}\r\n                          value={inputData}\r\n                          onChange={changeHandler}\r\n                          minLength=\"42\"\r\n                          maxLength=\"42\"\r\n                        />\r\n                      </FormItem>\r\n\r\n                      <FormItem>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                      </FormItem>\r\n                    </FormContainer>\r\n                  </Form>\r\n                </Formik>\r\n              </div>\r\n\r\n              <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Sr. No\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Contract Address\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Created Time\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {backendData.map((item, index) => (\r\n                    <tr\r\n                      className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\r\n                      key={index}\r\n                    >\r\n                      <td\r\n                        scope=\"row\"\r\n                        className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\r\n                      >\r\n                        {console.info(item)}\r\n                        {index + 1}\r\n                      </td>\r\n                      <td className=\"py-4 px-6\">\r\n                        {item.contract}{\" \"}\r\n                        <i\r\n                          className=\"fa-solid fa-copy pl-2 cursor-pointer\"\r\n                          onClick={() => {\r\n                            navigator.clipboard.writeText(item.contract);\r\n                            notify();\r\n                          }}\r\n                        ></i>\r\n                      </td>\r\n                      <td className=\"py-4 px-6\">\r\n                        {new Date(item?.createdAt)?.toLocaleDateString([], {\r\n                          year: \"numeric\",\r\n                          month: \"long\",\r\n                          day: \"numeric\",\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: true,\r\n                        })}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </TabContent>\r\n            <TabContent value=\"tab2\">\r\n              <div>\r\n                <Formik\r\n                  initialValues={{\r\n                    fieldB: \"\",\r\n                  }}\r\n                  onSubmit={blackListSubmitHandler}\r\n                >\r\n                  <Form>\r\n                    <FormContainer>\r\n                      <FormItem label=\"Polygon Contract Address\">\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"fieldB\"\r\n                          placeholder=\"Please Input contract address\"\r\n                          component={Input}\r\n                          value={blackListInputData}\r\n                          onChange={blackListChangeHandler}\r\n                          minLength=\"42\"\r\n                          maxLength=\"42\"\r\n                        />\r\n                      </FormItem>\r\n\r\n                      <FormItem>\r\n                        <Button type=\"submit\">Submit</Button>\r\n                      </FormItem>\r\n                    </FormContainer>\r\n                  </Form>\r\n                </Formik>\r\n              </div>\r\n\r\n              <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400\">\r\n                <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                  <tr>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Sr. No\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Contract Address\r\n                    </th>\r\n                    <th scope=\"col\" className=\"py-3 px-6\">\r\n                      Created Time\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {blackListDataShow.map((item, index) => (\r\n                    <tr\r\n                      className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700\"\r\n                      key={index}\r\n                    >\r\n                      <td\r\n                        scope=\"row\"\r\n                        className=\"py-4 px-6 font-medium text-gray-900 whitespace-nowrap dark:text-white\"\r\n                      >\r\n                        {index + 1}\r\n                      </td>\r\n                      <td className=\"py-4 px-6\">\r\n                        {item.contract}\r\n                        <i\r\n                          className=\"fa-solid fa-copy pl-2 cursor-pointer\"\r\n                          onClick={() => {\r\n                            navigator.clipboard.writeText(item.contract);\r\n                            notify();\r\n                          }}\r\n                        ></i>\r\n                      </td>\r\n                      <td className=\"py-4 px-6\">\r\n                        {new Date(item?.createdAt)?.toLocaleDateString([], {\r\n                          year: \"numeric\",\r\n                          month: \"long\",\r\n                          day: \"numeric\",\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: true,\r\n                        })}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </TabContent>\r\n          </div>\r\n        </Tabs>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleMenuView;\r\n"],"names":["TabNav","Tabs","TabList","TabContent","baseUrl","process","useState","setLoading","inputData","setInputData","blackListInputData","setBlackListInputData","console","log","setStoreData","backendData","setBackendData","blackListDataShow","setBlackListDataShow","useEffect","fetch","headers","Accept","method","body","JSON","stringify","listType","then","res","json","catch","err","notify","toast","submitNotify","blackListSubmitNotify","defaultValue","value","className","initialValues","fieldA","onSubmit","contract","label","type","name","placeholder","component","Input","onChange","event","target","minLength","maxLength","scope","map","item","index","info","onClick","navigator","clipboard","writeText","Date","createdAt","toLocaleDateString","year","month","day","hour","minute","hour12","fieldB"],"sourceRoot":""}