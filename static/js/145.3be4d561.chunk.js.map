{"version":3,"file":"static/js/145.3be4d561.chunk.js","mappings":"qIAmBA,IAjBA,WAA6C,IAAlBA,EAAiB,uDAAN,IAElC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAS,CACT,IAAIG,EAAUC,YAAW,kBAAMH,EAAW,GAAjB,GAAsBH,GAC/C,OAAO,WACHO,aAAaF,EAChB,CACV,CAEE,GAAE,CAACH,IAEG,CAACA,EAASC,EACpB,C,+LCRKK,EAAmBC,EAAAA,KAAaC,MAAM,CAC3CC,SAAUF,EAAAA,KAAaG,SAAS,8BAChCC,gBAAiBJ,EAAAA,KAAaK,MAAM,CAACL,EAAAA,GAAQ,YAAa,MAAO,iCAkIlE,EA/H0B,SAAAM,GAEzB,MAAqEA,EAA7DC,cAAAA,OAAR,SAA+BC,EAAsCF,EAAtCE,UAA/B,EAAqEF,EAA3BG,UAAAA,OAA1C,MAAsD,WAAtD,EAEA,GAA4CjB,EAAAA,EAAAA,WAAS,GAArD,eAAQkB,EAAR,KAAuBC,EAAvB,KAEA,GAAgCC,EAAAA,EAAAA,KAAhC,eAAQnB,EAAR,KAAiBC,EAAjB,KAEMmB,GAAWC,EAAAA,EAAAA,MAEXC,EAAQ,yCAAG,WAAOC,EAAQC,GAAf,uFACRf,EAAac,EAAbd,SACRe,GAAc,GAFE,mBAIIC,EAAAA,EAAAA,IAAiB,CAAEhB,SAAAA,IAJvB,cAKNiB,OACRF,GAAc,GACdN,GAAiB,IAPH,gDAUfjB,GAAW,2CAAQ0B,gBAAR,mBAAkBD,YAAlB,eAAwB1B,UAAW,KAAO4B,YACrDJ,GAAc,GAXC,yDAAH,wDAeRK,EAAa,WAClBT,EAAS,WACT,EAED,OACC,iBAAKL,UAAWA,EAAhB,WACC,gBAAKA,UAAU,OAAf,SAEEE,GACA,iCACC,eAAIF,UAAU,OAAd,yBACA,yEAGD,iCACC,eAAIA,UAAU,OAAd,+BACA,qFAIFf,IAAW,SAAC,KAAD,CAAOe,UAAU,OAAOe,KAAK,SAASC,UAAQ,EAA9C,SAAgD/B,KAC5D,SAAC,KAAD,CACCgC,cAAe,CACdvB,SAAU,UACVE,gBAAiB,WAElBL,iBAAkBA,EAClBgB,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAChBV,EAGHU,GAAc,GAFdF,EAASC,EAAQC,EAIlB,EAZF,SAcE,gBAAES,EAAF,EAAEA,QAASC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,aAAnB,OACA,SAAC,KAAD,WACC,UAAC,KAAD,WAEGlB,GAsCA,SAAC,KAAD,CACCmB,OAAK,EACLC,QAAQ,QACRP,KAAK,SACLQ,QAAST,EAJV,uBArCA,iCACC,SAAC,KAAD,CACCU,MAAM,WACNC,QAASN,EAAOzB,UAAYwB,EAAQxB,SACpCgC,aAAcP,EAAOzB,SAHtB,UAKC,SAAC,KAAD,CACCiC,aAAa,MACbC,KAAK,WACLC,YAAY,WACZC,UAAWC,EAAAA,QAGb,SAAC,KAAD,CACCP,MAAM,mBACNC,QAASN,EAAOvB,iBAAmBsB,EAAQtB,gBAC3C8B,aAAcP,EAAOvB,gBAHtB,UAKC,SAAC,KAAD,CACC+B,aAAa,MACbC,KAAK,kBACLC,YAAY,mBACZC,UAAWC,EAAAA,QAGb,SAAC,KAAD,CACCV,OAAK,EACLW,QAASZ,EACTE,QAAQ,QACRP,KAAK,SAJN,SAMGK,EAAe,eAAiB,eAiBtC,iBAAKpB,UAAU,mBAAf,WACC,wCACA,SAAC,KAAD,CAAYiC,GAAIhC,EAAhB,4BAvDH,MAiEJ,EClID,EANsB,WACrB,OACC,SAAC,EAAD,CAAmBF,eAAe,GAEnC,C","sources":["utils/hooks/useTimeOutMessage.js","views/auth/ResetPassword/ResetPasswordForm.js","views/auth/ResetPassword/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n\t\t}\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n                                              \r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage","import React, { useState } from 'react'\r\nimport { Button, FormItem, FormContainer, Alert } from 'components/ui'\r\nimport { PasswordInput, ActionLink } from 'components/shared'\r\nimport { apiResetPassword } from 'services/AuthService'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\tpassword: Yup.string().required('Please enter your password'),\r\n\tconfirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Your passwords do not match')\r\n})\r\n\r\nconst ResetPasswordForm = props => {\r\n\t\r\n\tconst { disableSubmit = false, className, signInUrl = '/sign-in' } = props\r\n\r\n\tconst [ resetComplete, setResetComplete ] = useState(false)\r\n\r\n\tconst [ message, setMessage ] = useTimeOutMessage()\r\n\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst onSubmit = async (values, setSubmitting) => {\r\n\t\tconst { password } = values\r\n\t\tsetSubmitting(true)\r\n\t\ttry {\r\n\t\t\tconst resp = await apiResetPassword({ password })\r\n\t\t\tif (resp.data) {\r\n\t\t\t\tsetSubmitting(false)\r\n\t\t\t\tsetResetComplete(true)\r\n\t\t\t}\r\n\t\t} catch (errors) {\r\n\t\t\tsetMessage(errors?.response?.data?.message || errors.toString())\r\n\t\t\tsetSubmitting(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onContinue = () => {\r\n\t\tnavigate('/sign-in')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n\t\t\t<div className=\"mb-6\">\r\n\t\t\t\t{\r\n\t\t\t\t\tresetComplete ? \r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h3 className=\"mb-1\">Reset done</h3>\r\n\t\t\t\t\t\t<p>Your password has been successfully reset</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h3 className=\"mb-1\">Set new password</h3>\r\n\t\t\t\t\t\t<p>Your new password must different to previos password</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{message && <Alert className=\"mb-4\" type=\"danger\" showIcon>{message}</Alert>}\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tpassword: '123Qwe1', \r\n\t\t\t\t\tconfirmPassword: '123Qwe1',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\tif(!disableSubmit) {\r\n\t\t\t\t\t\tonSubmit(values, setSubmitting)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetSubmitting(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({touched, errors, isSubmitting}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormContainer>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t!resetComplete ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<FormItem\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tinvalid={errors.password && touched.password}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={errors.password}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={PasswordInput} \r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t\t\t\t\t<FormItem\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\t\t\t\tinvalid={errors.confirmPassword && touched.confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t\terrorMessage={errors.confirmPassword}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\" \r\n\t\t\t\t\t\t\t\t\t\t\t\tcomponent={PasswordInput} \r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tblock \r\n\t\t\t\t\t\t\t\t\t\t\tloading={isSubmitting} \r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"solid\" \r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{ isSubmitting ? 'Submiting...' : 'Submit' }\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tblock \r\n\t\t\t\t\t\t\t\t\t\tvariant=\"solid\" \r\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={onContinue}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className=\"mt-4 text-center\">\r\n\t\t\t\t\t\t\t\t<span>Back to </span>\r\n\t\t\t\t\t\t\t\t<ActionLink to={signInUrl}>\r\n\t\t\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t\t\t</ActionLink>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</FormContainer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ResetPasswordForm","import React from 'react'\r\nimport ResetPasswordForm from './ResetPasswordForm'\r\n\r\nconst ResetPassword = () => {\r\n\treturn (\r\n\t\t<ResetPasswordForm disableSubmit={false} />\r\n\t)\r\n}\r\n\r\nexport default ResetPassword"],"names":["interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","password","required","confirmPassword","oneOf","props","disableSubmit","className","signInUrl","resetComplete","setResetComplete","useTimeOutMessage","navigate","useNavigate","onSubmit","values","setSubmitting","apiResetPassword","data","response","toString","onContinue","type","showIcon","initialValues","touched","errors","isSubmitting","block","variant","onClick","label","invalid","errorMessage","autoComplete","name","placeholder","component","PasswordInput","loading","to"],"sourceRoot":""}