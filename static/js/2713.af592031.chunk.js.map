{"version":3,"file":"static/js/2713.af592031.chunk.js","mappings":"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","sources":["components/docs/DocumentationNav.js","views/docs/Documentations/documentationRoutes.js","views/docs/Documentations/DocumentationWrapper.js","views/docs/Documentations/DocumentationView.js","views/docs/Documentations/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Drawer, Button } from 'components/ui'\r\nimport { NavToggle } from 'components/shared'\r\nimport useThemeClass from 'utils/hooks/useThemeClass'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst NavContent = ({onLinkClick, routes}) => {\r\n\r\n\tconst { textTheme, borderTheme } = useThemeClass()\r\n\r\n\tconst activeClass = `${textTheme} hover:${textTheme} ${borderTheme}`\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{routes.map(group => (\r\n\t\t\t\t<div className=\"mb-6\" key={group.groupName}>\r\n\t\t\t\t\t<h6 className=\"mb-4\">{group.groupName}</h6>\r\n\t\t\t\t\t<div className=\"ltr:border-l rtl:border-r border-gray-200 dark:border-gray-600\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgroup.nav.map(menu => (\r\n\t\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\t\tkey={menu.label}\r\n\t\t\t\t\t\t\t\t\tclassName={({ isActive }) => (\r\n\t\t\t\t\t\t\t\t\t\t`cursor-pointer font-semibold ltr:border-l rtl:border-r px-4 h-6 mb-4 flex items-center gap-2 hover:text-gray-900 dark:hover:text-gray-100 ltr:-ml-px rtl:-mr-px ${isActive ? activeClass : 'border-transparent'}`\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\tto={menu.path}\r\n\t\t\t\t\t\t\t\t\tonClick={onLinkClick}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span>{menu.label}</span>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst MobileNav = ({routes}) => {\r\n\r\n\tconst [isOpen, setIsOpen] = useState(false)\r\n\r\n\tconst openDrawer = () => {\r\n\t\tsetIsOpen(true)\r\n\t}\r\n\r\n\tconst onDrawerClose = () => {\r\n\t\tsetIsOpen(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Button\r\n\t\t\t\tclassName=\"lg:hidden\"\r\n\t\t\t\tshape=\"circle\" \r\n\t\t\t\tvariant=\"plain\"\r\n\t\t\t\ticon={<NavToggle className=\"text-2xl\" toggled={isOpen} />} \r\n\t\t\t\tonClick={openDrawer}\r\n\t\t\t/>\r\n\t\t\t<Drawer\r\n\t\t\t\ttitle=\"Navigation\"\r\n\t\t\t\tisOpen={isOpen}\r\n\t\t\t\tonClose={onDrawerClose}\r\n\t\t\t\tonRequestClose={onDrawerClose}\r\n\t\t\t\twidth={300}\r\n\t\t\t\tplacement=\"left\"\r\n\t\t\t>\r\n\t\t\t\t<NavContent onLinkClick={onDrawerClose} routes={routes} />\r\n\t\t\t</Drawer>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst DocumentationNav = ({routes}) => {\r\n\r\n\treturn (\r\n\t\t<div className=\"flex flex-col\">\r\n\t\t\t<div className=\"hidden lg:block\">\r\n\t\t\t\t<NavContent routes={routes} />\r\n\t\t\t</div>\r\n\t\t\t<MobileNav routes={routes} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DocumentationNav","import { lazy } from 'react'\r\n\r\nconst documentationRoutes = [\r\n    {\r\n        groupName: 'Getting Started',\r\n        nav: [\r\n            {\r\n                path: 'introduction',\r\n                label: 'Introduction',\r\n                component: lazy(() => import('./components/Introduction'))\r\n            },\r\n            {\r\n                path: 'installation',\r\n                label: 'Installation',\r\n                component: lazy(() => import('./components/Installation'))\r\n            },\r\n            {\r\n                path: 'tailwindcss',\r\n                label: 'TailwindCSS',\r\n                component: lazy(() => import('./components/TailwindCss'))\r\n            },\r\n            {\r\n                path: 'css',\r\n                label: 'CSS',\r\n                component: lazy(() => import('./components/Css'))\r\n            },\r\n            {\r\n                path: 'updating',\r\n                label: 'Updating',\r\n                component: lazy(() => import('./components/Updating'))\r\n            },\r\n        ]\r\n    },\r\n    // {\r\n    //     groupName: 'Development',\r\n    //     nav: [\r\n    //         {\r\n    //             path: 'development-server',\r\n    //             label: 'Development Server',\r\n    //             component: lazy(() => import('./components/DevelopmentServer'))\r\n    //         },\r\n    //         {\r\n    //             path: 'folder-structure',\r\n    //             label: 'Folder Structure',\r\n    //             component: lazy(() => import('./components/FolderStructure'))\r\n    //         },\r\n    //         {\r\n    //             path: 'routing',\r\n    //             label: 'Routing',\r\n    //             component: lazy(() => import('./components/Routing'))\r\n    //         },\r\n    //         {\r\n    //             path: 'redux',\r\n    //             label: 'Redux',\r\n    //             component: lazy(() => import('./components/Redux'))\r\n    //         },\r\n    //         {\r\n    //             path: 'api-integration',\r\n    //             label: 'API Integration',\r\n    //             component: lazy(() => import('./components/ApiIntegration'))\r\n    //         },\r\n    //         {\r\n    //             path: 'authentication',\r\n    //             label: 'Authentication',\r\n    //             component: lazy(() => import('./components/Authentication'))\r\n    //         },\r\n    //         {\r\n    //             path: 'mock-api',\r\n    //             label: 'Mock Api',\r\n    //             component: lazy(() => import('./components/MockApi'))\r\n    //         },\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     groupName: 'Configuration',\r\n    //     nav: [\r\n    //         {\r\n    //             path: 'layouts',\r\n    //             label: 'Layouts',\r\n    //             component: lazy(() => import('./components/Layouts'))\r\n    //         },\r\n    //         {\r\n    //             path: 'navigation-config',\r\n    //             label: 'Navigation Config',\r\n    //             component: lazy(() => import('./components/NavigationConfig'))\r\n    //         },\r\n    //         {\r\n    //             path: 'theme-color',\r\n    //             label: 'Theme Color',\r\n    //             component: lazy(() => import('./components/ThemeColor'))\r\n    //         },\r\n    //         {\r\n    //             path: 'internationalization',\r\n    //             label: 'Internationalization',\r\n    //             component: lazy(() => import('./components/Internationalization'))\r\n    //         },\r\n    //         {\r\n    //             path: 'dark-light-mode',\r\n    //             label: 'Dark/Light Mode',\r\n    //             component: lazy(() => import('./components/DarkLightMode'))\r\n    //         },\r\n    //         {\r\n    //             path: 'direction',\r\n    //             label: 'Direction',\r\n    //             component: lazy(() => import('./components/Direction'))\r\n    //         },\r\n    //         {\r\n    //             path: 'overall=theme-config',\r\n    //             label: 'Overall Theme Config',\r\n    //             component: lazy(() => import('./components/OverallThemeConfig'))\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     groupName: 'Deployment',\r\n    //     nav: [\r\n    //         {\r\n    //             path: 'build-production',\r\n    //             label: 'Build production',\r\n    //             component: lazy(() => import('./components/BuildProduction'))\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // {\r\n    //     groupName: 'Other',\r\n    //     nav: [\r\n    //         {\r\n    //             path: 'credit',\r\n    //             label: 'Sources & Credits',\r\n    //             component: lazy(() => import('./components/Credit'))\r\n    //         }\r\n    //     ]\r\n    // },\r\n]\r\n\r\nexport default documentationRoutes\r\n","import React from 'react'\r\n\r\nconst DocumentationWrapper = ({children, title}) => {\r\n\treturn (\r\n\t\t<div className=\"h-full w-full\">\r\n\t\t\t<h3 className=\"mb-6\">{title}</h3>\r\n\t\t\t<div className=\"prose dark:prose-invert max-w-[800px]\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DocumentationWrapper","import React, { Fragment, Suspense } from 'react'\r\nimport { Spinner } from 'components/ui'\r\nimport documentationRoutes from './documentationRoutes'\r\nimport DocumentationWrapper from './DocumentationWrapper'\r\nimport { Routes, Route, Navigate } from 'react-router-dom'\r\n\r\nconst DocumentationView = () => {\r\n\treturn (\r\n\t\t<Routes>\r\n\t\t\t{\r\n\t\t\t\tdocumentationRoutes.map(group => (\r\n\t\t\t\t\t<Fragment key={group.groupName}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgroup.nav.map(({path, component: Component, label}) => (\r\n\t\t\t\t\t\t\t\t<Route\r\n\t\t\t\t\t\t\t\t\tkey={label}\r\n\t\t\t\t\t\t\t\t\tpath={path} \r\n\t\t\t\t\t\t\t\t\telement={\r\n\t\t\t\t\t\t\t\t\t\t<Suspense \r\n\t\t\t\t\t\t\t\t\t\t\tfallback={\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"h-full w-full flex items-center justify-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Spinner size={40} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<DocumentationWrapper title={label}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Component />\r\n\t\t\t\t\t\t\t\t\t\t\t</DocumentationWrapper>\r\n\t\t\t\t\t\t\t\t\t\t</Suspense>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Fragment>\r\n\t\t\t\t))\r\n\t\t\t}\r\n\t\t\t<Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n\t\t</Routes>\r\n\t)\r\n}\r\n\r\nexport default DocumentationView","import React from 'react'\r\nimport { AdaptableCard } from 'components/shared'\r\nimport DocumentationNav from 'components/docs/DocumentationNav'\r\nimport documentationRoutes from './documentationRoutes'\r\nimport DocumentationView from './DocumentationView'\r\n\r\nconst Documentations = () => {\r\n\treturn (\r\n\t\t<AdaptableCard className=\"h-full\" bodyClass=\"lg:flex h-full gap-8\">\r\n\t\t\t<div className=\"lg:w-[280px] py-2 lg-py-0 px-4 mb-4 border border-gray-200 dark:border-gray-700 rounded-md lg:border-0\">\r\n\t\t\t\t<DocumentationNav routes={documentationRoutes} />\r\n\t\t\t</div>\r\n\t\t\t<div className='w-full'>\r\n\t\t\t\t<DocumentationView />\r\n\t\t\t</div>\r\n\t\t</AdaptableCard>\r\n\t)\r\n}\r\n\r\nexport default Documentations"],"names":["NavContent","onLinkClick","routes","useThemeClass","textTheme","borderTheme","activeClass","map","group","className","groupName","nav","menu","isActive","to","path","onClick","label","MobileNav","useState","isOpen","setIsOpen","onDrawerClose","shape","variant","icon","toggled","title","onClose","onRequestClose","width","placement","component","lazy","children","documentationRoutes","Fragment","Component","element","Suspense","fallback","size","replace","bodyClass","DocumentationNav"],"sourceRoot":""}