{"version":3,"file":"static/js/5546.ef421588.chunk.js","mappings":"yIAmBA,IAjBA,WAA6C,IAAlBA,EAAiB,uDAAN,IAElC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAS,CACT,IAAIG,EAAUC,YAAW,kBAAMH,EAAW,GAAjB,GAAsBH,GAC/C,OAAO,WACHO,aAAaF,EAChB,CACV,CAEE,GAAE,CAACH,IAEG,CAACA,EAASC,EACpB,C,iMCTKK,EAAmBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaG,SAAS,6BAyF9B,EAtF2B,SAAAC,GAE1B,MAAqEA,EAA7DC,cAAAA,OAAR,SAA+BC,EAAsCF,EAAtCE,UAA/B,EAAqEF,EAA3BG,UAAAA,OAA1C,MAAsD,WAAtD,EAEA,GAAoCf,EAAAA,EAAAA,WAAS,GAA7C,eAAQgB,EAAR,KAAmBC,EAAnB,KAEA,GAAgCC,EAAAA,EAAAA,KAAhC,eAAQjB,EAAR,KAAiBC,EAAjB,KAEMiB,EAAU,yCAAG,WAAOC,EAAQC,GAAf,qFAClBA,GAAc,GADI,mBAGEC,EAAAA,EAAAA,IAAkBF,GAHpB,cAIRG,OACRF,GAAc,GACdJ,GAAa,IANG,gDASjBf,GAAW,2CAAQsB,gBAAR,mBAAkBD,YAAlB,eAAwBtB,UAAW,KAAOwB,YACrDJ,GAAc,GAVG,yDAAH,wDAchB,OACC,iBAAKP,UAAWA,EAAhB,WACU,gBAAKA,UAAU,OAAf,SAEPE,GACA,iCACC,eAAIF,UAAU,OAAd,+BACA,0FAGD,iCACC,eAAIA,UAAU,OAAd,8BACA,+FAIFb,IAAW,SAAC,KAAD,CAAOa,UAAU,OAAOY,KAAK,SAASC,UAAQ,EAA9C,SAAgD1B,KAC5D,SAAC,KAAD,CACC2B,cAAe,CACdlB,MAAO,kBAERH,iBAAkBA,EAClBsB,SAAU,SAACT,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cAChBR,EAGHQ,GAAc,GAFdF,EAAWC,EAAQC,EAIpB,EAXF,SAaE,gBAAES,EAAF,EAAEA,QAASC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,aAAnB,OACA,SAAC,KAAD,WACC,UAAC,KAAD,YACC,gBAAKlB,UAAWE,EAAY,SAAW,GAAvC,UACC,SAAC,KAAD,CACCiB,QAASF,EAAOrB,OAASoB,EAAQpB,MACjCwB,aAAcH,EAAOrB,MAFtB,UAIC,SAAC,KAAD,CACCgB,KAAK,QACLS,aAAa,MACbC,KAAK,QACLC,YAAY,QACZC,UAAWC,EAAAA,UAId,SAAC,KAAD,CAAQC,OAAK,EAACC,QAAST,EAAcU,QAAQ,QAAQhB,KAAK,SAA1D,SACEV,EAAY,eAAiB,gBAE/B,iBAAKF,UAAU,mBAAf,WACC,wCACA,SAAC,KAAD,CAAY6B,GAAI5B,EAAhB,4BAtBH,MAgCJ,ECvFD,EANuB,WACrB,OACE,SAAC,EAAD,CAAoBF,eAAe,GAEtC,C","sources":["utils/hooks/useTimeOutMessage.js","views/auth/ForgotPassword/ForgotPasswordForm.js","views/auth/ForgotPassword/index.js"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nfunction useTimeOutMessage(interval = 3000) {\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (message) {\r\n            let timeout = setTimeout(() => setMessage(''), interval)\r\n            return () => {\r\n                clearTimeout(timeout)\r\n            }\r\n\t\t}\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [message])\r\n                                              \r\n    return [message, setMessage]\r\n}\r\n\r\nexport default useTimeOutMessage","import React, { useState } from 'react'\r\nimport { Input, Button, FormItem, FormContainer, Alert } from 'components/ui'\r\nimport { ActionLink } from 'components/shared'\r\nimport { apiForgotPassword } from 'services/AuthService'\r\nimport useTimeOutMessage from 'utils/hooks/useTimeOutMessage'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\nconst validationSchema = Yup.object().shape({\r\n\temail: Yup.string().required('Please enter your email'),\r\n})\r\n\r\nconst ForgotPasswordForm = props => {\r\n\r\n\tconst { disableSubmit = false, className, signInUrl = '/sign-in' } = props\r\n\r\n\tconst [ emailSent, setEmailSent ] = useState(false)\r\n\r\n\tconst [ message, setMessage ] = useTimeOutMessage()\r\n\r\n\tconst onSendMail = async (values, setSubmitting) => {\r\n\t\tsetSubmitting(true)\r\n\t\ttry {\r\n\t\t\tconst resp = await apiForgotPassword(values)\r\n\t\t\tif (resp.data) {\r\n\t\t\t\tsetSubmitting(false)\r\n\t\t\t\tsetEmailSent(true)\r\n\t\t\t}\r\n\t\t} catch (errors) {\r\n\t\t\tsetMessage(errors?.response?.data?.message || errors.toString())\r\n\t\t\tsetSubmitting(false)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={className}>\r\n            <div className=\"mb-6\">\r\n\t\t\t\t{\r\n\t\t\t\t\temailSent ? \r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h3 className=\"mb-1\">Check your email</h3>\r\n\t\t\t\t\t\t<p>We have sent a password recovery instruction to your email</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h3 className=\"mb-1\">Forgot Password</h3>\r\n\t\t\t\t\t\t<p>Please enter your email address to receive a verification code</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{message && <Alert className=\"mb-4\" type=\"danger\" showIcon>{message}</Alert>}\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\temail: 'admin@mail.com',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={validationSchema}\r\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\r\n\t\t\t\t\tif(!disableSubmit) {\r\n\t\t\t\t\t\tonSendMail(values, setSubmitting)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsetSubmitting(false)\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{({touched, errors, isSubmitting}) => (\r\n\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t<FormContainer>\r\n\t\t\t\t\t\t\t<div className={emailSent ? 'hidden' : ''}>\r\n\t\t\t\t\t\t\t\t<FormItem\r\n\t\t\t\t\t\t\t\t\tinvalid={errors.email && touched.email}\r\n\t\t\t\t\t\t\t\t\terrorMessage={errors.email}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\" \r\n\t\t\t\t\t\t\t\t\t\tcomponent={Input} \r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FormItem>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Button block loading={isSubmitting} variant=\"solid\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t{emailSent ? 'Resend Email' : 'Send Email'}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<div className=\"mt-4 text-center\">\r\n\t\t\t\t\t\t\t\t<span>Back to </span>\r\n\t\t\t\t\t\t\t\t<ActionLink to={signInUrl}>\r\n\t\t\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t\t\t</ActionLink>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</FormContainer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t)}\r\n\t\t\t</Formik>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ForgotPasswordForm","import React from 'react'\r\nimport ForgotPasswordForm from './ForgotPasswordForm'\r\n\r\nconst ForgotPassword = () => {\r\n  return (\r\n    <ForgotPasswordForm disableSubmit={false} />\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n"],"names":["interval","useState","message","setMessage","useEffect","timeout","setTimeout","clearTimeout","validationSchema","Yup","shape","email","required","props","disableSubmit","className","signInUrl","emailSent","setEmailSent","useTimeOutMessage","onSendMail","values","setSubmitting","apiForgotPassword","data","response","toString","type","showIcon","initialValues","onSubmit","touched","errors","isSubmitting","invalid","errorMessage","autoComplete","name","placeholder","component","Input","block","loading","variant","to"],"sourceRoot":""}