{"version":3,"file":"static/js/6825.39da6f27.chunk.js","mappings":"6JAIQA,EAA6BC,EAAAA,GAAAA,GAAzBC,EAAyBD,EAAAA,GAAAA,GAArBE,EAAqBF,EAAAA,GAAAA,GAAjBG,EAAiBH,EAAAA,GAAAA,MAAVI,EAAUJ,EAAAA,GAAAA,MAyCrC,IAvCyB,SAAC,GAA2C,IAA1CK,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,IAA2B,IAAtBC,QAAAA,OAAsB,MAAZ,OAAY,EAChE,OACI,2BACMD,EAAIE,OAAS,IAAMH,IAAiB,iCACtC,gBAAKI,UAAU,OAAf,SAEQH,EAAII,KAAI,SAAAC,GAAI,OACR,4BACI,eAAIF,UAAU,OAAd,SAAsBE,EAAKC,aAC3B,UAAC,KAAD,CAAOH,UAAS,yBAAoBH,EAAIE,OAAS,EAAI,OAAS,IAA9D,WACI,SAACL,EAAD,WACI,UAACJ,EAAD,YACI,SAACE,EAAD,UAAKM,KACL,SAACN,EAAD,2BACA,SAACA,EAAD,oBACA,SAACA,EAAD,4BAGR,SAACG,EAAD,UAEQO,EAAKL,IAAII,KAAI,SAAAG,GAAI,OACb,UAACd,EAAD,YACI,SAACG,EAAD,CAAIO,UAAU,gBAAd,SAA+BI,EAAKC,YACpC,SAACZ,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKG,SAC1B,SAACd,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKI,SAC1B,SAACf,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKK,aAJ9B,cAAgBL,EAAKC,UADR,WAbjC,cAAiBH,EAAKC,WADd,QA+B/B,C,yFCoFD,UA3H2B,WAC1B,OACC,iCACC,0BAAG,0DAAH,yKAGA,SAAC,KAAD,CAAmBO,SAAS,KAA5B,qcAiBA,iBAAKV,UAAU,QAAQW,GAAG,aAA1B,WACC,wCACA,SAAC,IAAD,CAAkBf,cAAY,EAACC,IAC7B,CACC,CACCA,IAAK,CACJ,CACCQ,SAAU,aACVG,KAAK,qJACLC,QAAQ,wBACRF,KAAM,+BAEP,CACCF,SAAU,YACVG,KAAK,0CACLC,QAAQ,qBACRF,KAAK,6BAEN,CACCF,SAAU,OACVG,KAAK,6CACLC,QAAQ,qBACRF,KAAK,2CAEN,CACCF,SAAU,SACVG,KAAK,sBACLC,QAAQ,oBACRF,KAAK,gBAEN,CACCF,SAAU,oBACVG,KAAK,qJACLC,QAAQ,mBACRF,KAAK,0CAEN,CACCF,SAAU,eACVG,KAAK,uBACLC,QAAQ,oBACRF,KAAK,oDAEN,CACCF,SAAU,cACVG,KAAK,uBACLC,QAAQ,qBACRF,KAAK,2CAEN,CACCF,SAAU,cACVG,KAAK,gFACLC,QAAQ,oBACRF,KAAK,oCAEN,CACCF,SAAU,UACVG,KAAK,kGACLC,QAAQ,6BACRF,KAAK,uBAEN,CACCF,SAAU,cACVG,KAAK,sJACLC,QAAQ,wBACRF,KAAM,kCAEP,CACCF,SAAU,yBACVG,KAAK,uBACLC,QAAQ,qBACRF,KAAK,qJAQZ,iBAAKP,UAAU,QAAQW,GAAG,aAA1B,WACC,wCACA,yCACa,0CADb,qDAEe,4DAFf,2DAGoC,2CAHpC,QAKA,SAAC,KAAD,CAAmBD,SAAS,KAA5B,6VAaH,C","sources":["components/docs/DemoComponentApi/index.js","views/docs/Documentations/components/OverallThemeConfig.js"],"sourcesContent":["import React from 'react'\r\nimport { Table } from 'components/ui'\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\nconst { Tr, Th, Td, THead, TBody } = Table\r\n\r\nconst DemoComponentApi = ({hideApiTitle, api, keyText = 'Prop'}) => {\r\n    return (\r\n        <div>\r\n            {(api.length > 0 && !hideApiTitle) && <h4>API</h4>}\r\n            <div className=\"mt-4\">\r\n                {\r\n                    api.map(comp => (\r\n                        <div key={`api-${comp.component}`}>\r\n                            <h6 className=\"mb-3\">{comp.component}</h6>\r\n                            <Table className={`demo-api-table ${api.length > 1 ? 'mb-8' : ''}`}>\r\n                                <THead>\r\n                                    <Tr>\r\n                                        <Th>{keyText}</Th>\r\n                                        <Th>Description</Th>\r\n                                        <Th>Type</Th>\r\n                                        <Th>Default</Th>\r\n                                    </Tr>\r\n                                </THead>\r\n                                <TBody>\r\n                                    {\r\n                                        comp.api.map(item => (\r\n                                            <Tr key={`row-${item.propName}`}>\r\n                                                <Td className=\"font-semibold\">{item.propName}</Td>\r\n                                                <Td>{ReactHtmlParser(item.desc)}</Td>\r\n                                                <Td>{ReactHtmlParser(item.type)}</Td>\r\n                                                <Td>{ReactHtmlParser(item.default)}</Td>\r\n                                            </Tr>\r\n                                        ))\r\n                                    }\r\n                                </TBody>\r\n                            </Table>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DemoComponentApi\r\n","import React from 'react'\r\nimport { SyntaxHighlighter } from 'components/shared'\r\nimport DemoComponentApi from 'components/docs/DemoComponentApi'\r\n\r\nconst OverallThemeConfig = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p><code>src/configs/theme.config.js</code> has all template configurations listed with default valid values in all fields. \r\n\t\t\t\tYou can change the config based on your needs. Here is the default configuration:\r\n\t\t\t</p>\r\n\t\t\t<SyntaxHighlighter language=\"js\">{`import { THEME_ENUM } from 'constants/theme.constant'\r\n\r\nexport const themeConfig = {\r\n    themeColor: 'indigo',\r\n    direction: THEME_ENUM.DIR_LTR,\r\n    mode: THEME_ENUM.MODE_LIGHT,\r\n    locale: 'en',\r\n    primaryColorLevel: 600,\r\n    cardBordered: true,\r\n    panelExpand: false,\r\n    controlSize: 'md',\r\n    navMode: 'transparent',\r\n    layout: {\r\n        type: THEME_ENUM.LAYOUT_TYPE_MODERN,\r\n        sideNavCollapse: false,\r\n    },\r\n}`}</SyntaxHighlighter>\r\n\t\t\t<div className=\"mt-10\" id=\"properties\">\r\n\t\t\t\t<h5>Properties</h5>\r\n\t\t\t\t<DemoComponentApi hideApiTitle api={\r\n\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tapi: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'themeColor',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>string</code> | <a href=\"https://tailwindcss.com/docs/customizing-colors\" rel=\"noreferrer\" target=\"_blank\">tailwind preset color palette</a>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'indigo'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: 'Theme color of the template'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'direction',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>'ltr'</code> | <code>'rtl'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'ltr'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Direction of the template`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'mode',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>'light'</code> | <code>'dark'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'ltr'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Set Light or Dark mode for the template`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'locale',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>string</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'en'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Locale value`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'primaryColorLevel',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>number</code> | <a href=\"https://tailwindcss.com/docs/customizing-colors\" rel=\"noreferrer\" target=\"_blank\">tailwind preset color palette</a>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>600</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Color level of <code>themeColor</code>`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'cardBordered',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>boolean</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>true</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Whether to set all card having border by default`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'panelExpand',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>boolean</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>false</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Whether to expand side panel by default`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'controlSize',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>'xs'</code> | <code>'sm'</code> | <code>'md'</code> | <code>'lg'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'md'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Initialize all controlinput size`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'navMode',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>'transparent'</code> | <code>'light'</code> | <code>'dark'</code> | <code>'themed'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'transparent'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Color of navigation`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'layout.type',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>'blank'</code>  | <code>'classic'</code> | <code>'modern'</code> | <code>'simple'</code> | <code>'decked'</code> | <code>'stackedSide'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>'modern'</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: 'Type of the application layout'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tpropName: 'layout.sideNavCollapse',\r\n\t\t\t\t\t\t\t\t\t\ttype: `<code>boolean</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdefault: `<code>false</code>`,\r\n\t\t\t\t\t\t\t\t\t\tdesc: `Whether to collapse the side navigation (only only applicable when <code>type</code> is <code>'classic'</code> or <code>'modern'</code>)`\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t} \r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-10\" id=\"properties\">\r\n\t\t\t\t<h5>Persisting</h5>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tSome of the <code>themeConfig</code> field was persisted in our redux, \r\n\t\t\t\t\tyou can visit <code>src/store/theme/themeSlice.js</code> & remove the field \r\n\t\t\t\t\tyou don't wish to persist from the <code>initialState</code>.\r\n\t\t\t\t</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`const initialState = {\r\n\tthemeColor: themeConfig.themeColor,\r\n    direction: themeConfig.direction,\r\n    mode: themeConfig.mode,\r\n    locale: themeConfig.locale,\r\n    primaryColorLevel: themeConfig.primaryColorLevel,\r\n    panelExpand: themeConfig.panelExpand,\r\n    navMode: themeConfig.navMode,\r\n    layout: themeConfig.layout\r\n}`}</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default OverallThemeConfig"],"names":["Tr","Table","Th","Td","THead","TBody","hideApiTitle","api","keyText","length","className","map","comp","component","item","propName","ReactHtmlParser","desc","type","default","language","id"],"sourceRoot":""}