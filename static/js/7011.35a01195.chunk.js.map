{"version":3,"file":"static/js/7011.35a01195.chunk.js","mappings":"6JAIQA,EAA6BC,EAAAA,GAAAA,GAAzBC,EAAyBD,EAAAA,GAAAA,GAArBE,EAAqBF,EAAAA,GAAAA,GAAjBG,EAAiBH,EAAAA,GAAAA,MAAVI,EAAUJ,EAAAA,GAAAA,MAyCrC,IAvCyB,SAAC,GAA2C,IAA1CK,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,IAA2B,IAAtBC,QAAAA,OAAsB,MAAZ,OAAY,EAChE,OACI,2BACMD,EAAIE,OAAS,IAAMH,IAAiB,iCACtC,gBAAKI,UAAU,OAAf,SAEQH,EAAII,KAAI,SAAAC,GAAI,OACR,4BACI,eAAIF,UAAU,OAAd,SAAsBE,EAAKC,aAC3B,UAAC,KAAD,CAAOH,UAAS,yBAAoBH,EAAIE,OAAS,EAAI,OAAS,IAA9D,WACI,SAACL,EAAD,WACI,UAACJ,EAAD,YACI,SAACE,EAAD,UAAKM,KACL,SAACN,EAAD,2BACA,SAACA,EAAD,oBACA,SAACA,EAAD,4BAGR,SAACG,EAAD,UAEQO,EAAKL,IAAII,KAAI,SAAAG,GAAI,OACb,UAACd,EAAD,YACI,SAACG,EAAD,CAAIO,UAAU,gBAAd,SAA+BI,EAAKC,YACpC,SAACZ,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKG,SAC1B,SAACd,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKI,SAC1B,SAACf,EAAD,WAAKa,EAAAA,EAAAA,IAAgBF,EAAKK,aAJ9B,cAAgBL,EAAKC,UADR,WAbjC,cAAiBH,EAAKC,WADd,QA+B/B,C,0FC6GD,UApJyB,WACxB,OACC,iCACC,0LAGW,yEAEX,wEACA,SAAC,KAAD,CAAmBO,SAAS,KAA5B,4LAUA,mBACA,SAAC,IAAD,CAAkBd,cAAY,EAACE,QAAQ,aAAaD,IACnD,CACC,CACCA,IAAK,CACJ,CACCQ,SAAU,MACVG,KAAK,6BACLC,QAAQ,IACRF,KAAM,4EAEP,CACCF,SAAU,OACVG,KAAK,sBACLC,QAAS,IACTF,KAAM,sCAEP,CACCF,SAAU,QACVG,KAAK,sBACLC,QAAS,IACTF,KAAM,mCAEP,CACCF,SAAU,eACVG,KAAK,sBACLC,QAAS,IACTF,KAAM,iHAEP,CACCF,SAAU,OACVG,KAAK,sBACLC,QAAS,IACTF,KAAM,+GAEP,CACCF,SAAU,OACVG,KAAK,wEACLC,QAAQ,IACRF,KAAM,2CAEP,CACCF,SAAU,YACVG,KAAK,wBACLC,QAAQ,IACRF,KAAM,oIAEP,CACCF,SAAU,YACVG,KAAK,kCACLC,QAAQ,IACRF,KAAK,6NAMV,uEACA,SAAC,KAAD,CAAmBG,SAAS,KAA5B,gqCA4CA,iBAAKV,UAAU,QAAQW,GAAG,4BAA1B,WACC,yDACA,eAAGX,UAAU,OAAb,wEAC2D,wEAE3D,uEAC2C,2CAD3C,YAC4E,mCAD5E,2CAEgC,wDAFhC,2CAIA,kEAAwC,cAAGY,KAAK,6CAA6CC,OAAO,SAASC,IAAI,aAAzE,6BACxC,SAAC,KAAD,CAAmBJ,SAAS,KAA5B,qFAIA,mDAAyB,mCAAzB,uDACA,SAAC,KAAD,CAAmBA,SAAS,KAA5B,mHAMA,yEAA+C,qCAA/C,6BAIH,C","sources":["components/docs/DemoComponentApi/index.js","views/docs/Documentations/components/NavigationConfig.js"],"sourcesContent":["import React from 'react'\r\nimport { Table } from 'components/ui'\r\nimport ReactHtmlParser from 'react-html-parser'\r\n\r\nconst { Tr, Th, Td, THead, TBody } = Table\r\n\r\nconst DemoComponentApi = ({hideApiTitle, api, keyText = 'Prop'}) => {\r\n    return (\r\n        <div>\r\n            {(api.length > 0 && !hideApiTitle) && <h4>API</h4>}\r\n            <div className=\"mt-4\">\r\n                {\r\n                    api.map(comp => (\r\n                        <div key={`api-${comp.component}`}>\r\n                            <h6 className=\"mb-3\">{comp.component}</h6>\r\n                            <Table className={`demo-api-table ${api.length > 1 ? 'mb-8' : ''}`}>\r\n                                <THead>\r\n                                    <Tr>\r\n                                        <Th>{keyText}</Th>\r\n                                        <Th>Description</Th>\r\n                                        <Th>Type</Th>\r\n                                        <Th>Default</Th>\r\n                                    </Tr>\r\n                                </THead>\r\n                                <TBody>\r\n                                    {\r\n                                        comp.api.map(item => (\r\n                                            <Tr key={`row-${item.propName}`}>\r\n                                                <Td className=\"font-semibold\">{item.propName}</Td>\r\n                                                <Td>{ReactHtmlParser(item.desc)}</Td>\r\n                                                <Td>{ReactHtmlParser(item.type)}</Td>\r\n                                                <Td>{ReactHtmlParser(item.default)}</Td>\r\n                                            </Tr>\r\n                                        ))\r\n                                    }\r\n                                </TBody>\r\n                            </Table>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DemoComponentApi\r\n","import React from 'react'\r\nimport { SyntaxHighlighter } from 'components/shared'\r\nimport DemoComponentApi from 'components/docs/DemoComponentApi'\r\n\r\nconst NavigationConfig = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>\r\n\t\t\t\tWe form our navigation structure as array of objects & render it into UI eventually.\r\n\t\t\t\tYou can change or customize the app navigation very easily by \r\n\t\t\t\taccessing <code>src/configs/navigation.config/index.js</code>\r\n\t\t\t</p>\r\n\t\t\t<p>Here is the metadata for a single menu item</p>\r\n\t\t\t<SyntaxHighlighter language=\"js\">{`{\r\n\tkey: 'menuKey',\r\n\tpath: '',\r\n\ttitle: 'menu Title',\r\n\ttranslateKey: 'menu.translateKey',\r\n\ticon: 'menuIconName',\r\n\ttype: 'item',\r\n\tauthority: [],\r\n\tsubMenu: []\r\n}`}</SyntaxHighlighter>\r\n\t\t\t<br />\r\n\t\t\t<DemoComponentApi hideApiTitle keyText=\"properties\" api={\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tapi: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'key',\r\n\t\t\t\t\t\t\t\ttype: `<code>string</code></code>`,\r\n\t\t\t\t\t\t\t\tdefault: `-`,\r\n\t\t\t\t\t\t\t\tdesc: 'An unique key that need to be match with the route this menu navigate to'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'path',\r\n\t\t\t\t\t\t\t\ttype: `<code>string</code>`,\r\n\t\t\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\t\t\tdesc: 'An URL that this menu item link to'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'title',\r\n\t\t\t\t\t\t\t\ttype: `<code>string</code>`,\r\n\t\t\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\t\t\tdesc: 'Rendered text of this menu item'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'translateKey',\r\n\t\t\t\t\t\t\t\ttype: `<code>string</code>`,\r\n\t\t\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\t\t\tdesc: 'Translate key to translate the rendered text in menu item, fallback to <code>title</code> if empty or invalid'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'icon',\r\n\t\t\t\t\t\t\t\ttype: `<code>string</code>`,\r\n\t\t\t\t\t\t\t\tdefault: '-',\r\n\t\t\t\t\t\t\t\tdesc: 'Render icon in menu item, string value must tally with object key in <code>navigation-icon.config.js</code>'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'type',\r\n\t\t\t\t\t\t\t\ttype: `<code>'title'</code>  | <code>'collapse'</code> | <code>'item'</code>`,\r\n\t\t\t\t\t\t\t\tdefault: `-`,\r\n\t\t\t\t\t\t\t\tdesc: 'To define the type of current menu item'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'authority',\r\n\t\t\t\t\t\t\t\ttype: `<code>string[]</code>`,\r\n\t\t\t\t\t\t\t\tdefault: `-`,\r\n\t\t\t\t\t\t\t\tdesc: 'Display menu items to users who have the roles given, there will be no access block if the this field is undefine or empty array'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpropName: 'authority',\r\n\t\t\t\t\t\t\t\ttype: `<code>navigationConfig[]</code>`,\r\n\t\t\t\t\t\t\t\tdefault: `-`,\r\n\t\t\t\t\t\t\t\tdesc: `Whether have child in this menu item, it will render a menu group under this menu item, if the <code>type</code> is <code>'title'</code> or <code>'collapse'</code>, this field accept properties within this table`\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t} />\r\n\t\t\t<p>An example of structured navigation config</p>\r\n\t\t\t<SyntaxHighlighter language=\"js\">{`const navigationConfig = [\r\n    {\r\n\t\tkey: 'uiComponent',\r\n\t\tpath: '',\r\n\t\ttitle: 'Ui Component',\r\n\t\ttranslateKey: 'nav.uiComponents',\r\n\t\ticon: 'uiComponents',\r\n\t\ttype: 'title',\r\n\t\tauthority: ['admin', 'user'],\r\n\t\tsubMenu: [\r\n\t\t\t{\r\n\t\t\t\tkey: 'uiComponent.common',\r\n\t\t\t\tpath: '',\r\n\t\t\t\ttitle: 'Common',\r\n\t\t\t\ttranslateKey: 'nav.uiComponentsCommon.common',\r\n\t\t\t\ticon: 'common',\r\n\t\t\t\ttype: 'collapse',\r\n\t\t\t\tauthority: ['admin', 'user'],\r\n\t\t\t\tsubMenu: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'uiComponent.common.button',\r\n\t\t\t\t\t\tpath: '/button',\r\n\t\t\t\t\t\ttitle: 'Button',\r\n\t\t\t\t\t\ttranslateKey: 'nav.uiComponentsCommon.button',\r\n\t\t\t\t\t\ticon: '',\r\n\t\t\t\t\t\ttype: 'item',\r\n\t\t\t\t\t\tauthority: ['admin', 'user'],\r\n\t\t\t\t\t\tsubMenu: []\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'uiComponent.common.typography',\r\n\t\t\t\t\t\tpath: '/typography',\r\n\t\t\t\t\t\ttitle: 'Typography',\r\n\t\t\t\t\t\ttranslateKey: 'nav.uiComponentsCommon.typography',\r\n\t\t\t\t\t\ticon: '',\r\n\t\t\t\t\t\ttype: 'item',\r\n\t\t\t\t\t\tauthority: ['admin', 'user'],\r\n\t\t\t\t\t\tsubMenu: []\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n]`}</SyntaxHighlighter>\r\n\t\t\t<div className=\"mt-10\" id=\"configuringNavigationIcon\">\r\n\t\t\t\t<h5>Configuring navigation icon</h5>\r\n\t\t\t\t<p className=\"mt-1\">\r\n\t\t\t\t\tNavigation icon configuration placed on seperate file in  <code>src/configs/navigation-icon.config.js</code>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tIn the above example, we use string value <code>uiComponents</code> in the <code>icon</code> field,\r\n\t\t\t\t\twe must then use this value in <code>navigation-icon.config.js</code> to define the icon for the callout.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>First, import the icon you want from <a href=\"https://react-icons.github.io/react-icons/\" target=\"_blank\" rel=\"noreferrer\">react-icons</a></p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`import { FaBeer } from 'react-icons/fa'\r\n\r\nconst navigationIcon = {}\r\n`}</SyntaxHighlighter>\r\n\t\t\t\t<p>Set the value used in <code>icon</code> field as & the imported icon component as value</p>\r\n\t\t\t\t<SyntaxHighlighter language=\"js\">{`import { FaBeer } from 'react-icons/fa'\r\n\r\nconst navigationIcon = {\r\n\tuiComponents: <FaBeer />\r\n}\r\n`}</SyntaxHighlighter>\r\n\t\t\t\t<p>Now the corresponding menu item will render <code>FaBeer</code> as the menu icon.</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavigationConfig"],"names":["Tr","Table","Th","Td","THead","TBody","hideApiTitle","api","keyText","length","className","map","comp","component","item","propName","ReactHtmlParser","desc","type","default","language","id","href","target","rel"],"sourceRoot":""}