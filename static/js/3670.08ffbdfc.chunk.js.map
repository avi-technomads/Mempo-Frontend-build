{"version":3,"file":"static/js/3670.08ffbdfc.chunk.js","mappings":"yJAsIA,UAnIgB,WACd,OACE,iCACE,iDACwB,KACtB,cAAGA,KAAK,wBAAwBC,OAAO,SAASC,IAAI,aAApD,sBAEK,IAJP,0FAQA,iBAAKC,UAAU,QAAQC,GAAG,iBAA1B,WACE,6CACA,eAAGD,UAAU,OAAb,kGAEiB,yCAFjB,oBAE0D,KACxD,4DAEF,SAAC,KAAD,CAAmBE,SAAS,KAA5B,wEAKF,iBAAKF,UAAU,QAAQC,GAAG,eAA1B,WACE,4CACA,cAAGD,UAAU,OAAb,gHAIA,2BACE,2BACE,uCACA,eAAGA,UAAU,OAAb,oBACQ,gDADR,wDAIA,SAAC,KAAD,CAAmBE,SAAS,KAA5B,uPAcF,2BACE,iDACA,cAAGF,UAAU,OAAb,sDACA,SAAC,KAAD,CAAmBE,SAAS,KAA5B,+aAwBF,2BACE,iDACA,cAAGF,UAAU,OAAb,6CACA,SAAC,KAAD,CAAmBE,SAAS,KAA5B,iJASN,4BACE,yHAIA,SAAC,KAAD,CAAmBA,SAAS,KAA5B,+MASA,SAAC,KAAD,CAAmBA,SAAS,KAA5B,uZA0BP,C","sources":["views/docs/Documentations/components/MockApi.js"],"sourcesContent":["import React from \"react\";\r\nimport { SyntaxHighlighter } from \"components/shared\";\r\n\r\nconst MockApi = () => {\r\n  return (\r\n    <>\r\n      <p>\r\n        Mempoverse Admin uses{\" \"}\r\n        <a href=\"https://miragejs.com/\" target=\"_blank\" rel=\"noreferrer\">\r\n          miragejs\r\n        </a>{\" \"}\r\n        for mocking API calls, all the api interaction in our demo are work\r\n        under miragejs.\r\n      </p>\r\n      <div className=\"mt-10\" id=\"disableMockApi\">\r\n        <h5>Enable mock api</h5>\r\n        <p className=\"mt-1\">\r\n          Mock api was disabled by default in our starter-kit, you can turn in\r\n          on via setting <code>enableMock</code> field to true in{\" \"}\r\n          <code>src/configs/app.config.js</code>\r\n        </p>\r\n        <SyntaxHighlighter language=\"js\">{`const appConfig = {\r\n    ...,\r\n    enableMock: true\r\n}`}</SyntaxHighlighter>\r\n      </div>\r\n      <div className=\"mt-10\" id=\"usingMockApi\">\r\n        <h5>Using mock api</h5>\r\n        <p className=\"mt-1\">\r\n          If you have intent to use mock api, you can follow the steps below to\r\n          create a fake db data & api\r\n        </p>\r\n        <ol>\r\n          <li>\r\n            <strong>Setup</strong>\r\n            <p className=\"mt-1\">\r\n              Visit <code>src/mock/index.js</code>, and here is the overall\r\n              configuration of mirage\r\n            </p>\r\n            <SyntaxHighlighter language=\"js\">{`export default function mockServer({ environment = 'test' }) {\r\n\treturn createServer({\r\n\t\tenvironment,\r\n\t\tseeds(server) {\r\n\t\t\tserver.db.loadData({\r\n\t\t\t\t...\r\n\t\t\t})\r\n\t\t},\r\n\t\troutes() {\r\n\t\t\t...\r\n\t\t},\r\n\t})\r\n}`}</SyntaxHighlighter>\r\n          </li>\r\n          <li>\r\n            <strong>Add static data</strong>\r\n            <p className=\"mt-1\">Now we can add some data to the fake db</p>\r\n            <SyntaxHighlighter language=\"js\">{`return createServer({\r\n\t\tenvironment,\r\n\t\tseeds(server) {\r\n\t\t\tserver.db.loadData({\r\n\t\t\t\tusersData: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: '1',\r\n\t\t\t\t\t\tname: 'Carolyn Perkins',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: '2',\r\n\t\t\t\t\t\tname: 'Terrance Moreno',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: '3',\r\n\t\t\t\t\t\tname: 'Ron Vargas',\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t},\r\n\t\t...\r\n\t})\r\n}`}</SyntaxHighlighter>\r\n          </li>\r\n          <li>\r\n            <strong>Create mock api</strong>\r\n            <p className=\"mt-1\">Created a mock api under route</p>\r\n            <SyntaxHighlighter language=\"js\">{`return createServer({\r\n\t\t...\r\n\t\troutes() {\r\n\t\t\tthis.get('api/getUsers', schema => schema.db.usersData)\r\n\t\t},\r\n})`}</SyntaxHighlighter>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n      <div>\r\n        <p>\r\n          And now you can make request to this api & get the static data just\r\n          setted above as response\r\n        </p>\r\n        <SyntaxHighlighter language=\"js\">{`// service\r\nimport ApiService from \"./ApiService\"\r\n\r\nexport async function apiGetUser () {\r\n    return ApiService.fetchData({\r\n        url: '/api/getUsers',\r\n        method: 'get'\r\n    })\r\n}`}</SyntaxHighlighter>\r\n        <SyntaxHighlighter language=\"js\">{`// component\r\nimport { useEffect } from 'react'\r\nimport { apiGetUser } from './YourService.js'\r\n\r\nconst YourComponent = props => {\r\n\r\n\tconst fetchData = async () => {\r\n\t\ttry {\r\n\t\t\tconst resp = await apiGetUser()\r\n\t\t\tconsole.log(resp.data)\r\n\t\t} catch (errors) {\r\n\t\t\t...handle errors\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchData()\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t...\r\n\t)\r\n}`}</SyntaxHighlighter>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MockApi;\r\n"],"names":["href","target","rel","className","id","language"],"sourceRoot":""}